package com.whereq.llm.openai.vo.completion;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.whereq.llm.gpt.vo.BaseVO;

/**
 * A completion generated by OpenAI
 *
 * https://platform.openai.com/docs/api-reference/completions/create
 */
public class CompletionChoice extends BaseVO {

    /**
     * The generated text. Will include the prompt if {@link CompletionRequest#echo } is true
     */
    String text;

    /**
     * This index of this completion in the returned list.
     */
    Integer index;

    /**
     * The log probabilities of the chosen tokens and the top {@link CompletionRequest#logprobs} tokens
     */
    LogProbResult logprobs;

    /**
     * The reason why GPT stopped generating, for example "length".
     */
    @JsonProperty("finish_reason")
    String finishReason;

    public CompletionChoice() {}

    public CompletionChoice(String text, Integer index, LogProbResult logprobs, String finishReason) {
        this.text = text;
        this.index = index;
        this.logprobs = logprobs;
        this.finishReason = finishReason;
    }

    public String getText() {
        return text;
    }

    public void setText(String text) {
        this.text = text;
    }

    public Integer getIndex() {
        return index;
    }

    public void setIndex(Integer index) {
        this.index = index;
    }

    public LogProbResult getLogprobs() {
        return logprobs;
    }

    public void setLogprobs(LogProbResult logprobs) {
        this.logprobs = logprobs;
    }

    public String getFinishReason() {
        return finishReason;
    }

    public void setFinishReason(String finishReason) {
        this.finishReason = finishReason;
    }

    @Override
    public String toString() {
        return (
            "CompletionChoice{" +
            "text='" +
            text +
            '\'' +
            ", index=" +
            index +
            ", logprobs=" +
            logprobs +
            ", finishReason='" +
            finishReason +
            '\'' +
            '}'
        );
    }
}
